# https://kubernetes.io/docs/tasks/run-application/run-single-instance-stateful-application/
# v1 - commented out volumeMounts and volumes section just to be able to start MySQL 
# v2 - initialize MySQL through defining init.sql in ConfigMap 
#      and map to /docker-entrypoint-initdb.d which Docker will exec all sql files in the dir (see https://hub.docker.com/_/mysql)
apiVersion: v1
kind: Service
metadata:
  name: mysql
spec:
  ports:
  - port: 3306
  selector:
    app: mysql
  clusterIP: None
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mysql
spec:
  selector:
    matchLabels:
      app: mysql
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: mysql
    spec:
      containers:
      - image: mysql
        name: mysql
        env:
          # Use secret in real usage
        - name: MYSQL_ROOT_PASSWORD
          value: password
        ports:
        - containerPort: 3306
          name: mysql
        # volumeMounts:
        # - name: mysql-persistent-storage
        #   mountPath: /var/lib/mysql
        
        # Initialize MySQL using ConfigMap 
        volumeMounts:
        - name: mysql-init-script
          mountPath: /docker-entrypoint-initdb.d
          readOnly: true
        resources:
          requests:
            memory: "256Mi" 
            cpu: "50m"    # 500milliCPUs (1/2 CPU)
          limits:
            memory: "1Gi"
            cpu: "100m"
      # volumes:
      # - name: mysql-persistent-storage
      #   persistentVolumeClaim:
      #     claimName: mysql-pv-claim
      #
      # Initialize MySQL using ConfigMap 
      volumes:
      - name: mysql-init-script
        configMap:
          name: mysql-init-script