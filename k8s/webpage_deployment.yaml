apiVersion: v1
kind: Service
metadata:
  name: my-webpage-svc
spec:
  selector:
    app: my-webpage
  ports:
    - name: http
      protocol: TCP
      port: 80
      targetPort: 5000
---
apiVersion: v1
kind: Service
metadata:
  name: my-webpage-adminer-svc
spec:
  ports:
  - port: 8080
  selector:
    app: my-webpage-adminer
  clusterIP: None
---
# Adminer does not require stateful storage like MySQL, so define it as a deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-webpage-adminer-deployment
  labels:
    app: my-webpage-adminer
spec:
  replicas: 1
  selector:
    matchLabels:
      app: my-webpage-adminer
  template:
    metadata:
      labels:
        app: my-webpage-adminer
    spec:
      containers:
      - name: my-webpage-adminer
        image: adminer
        ports:
        - containerPort: 8080
        resources:
          requests:
            memory: "16Mi" 
            cpu: "50m"    # 500milliCPUs (1/2 CPU)
          limits:
            memory: "256Mi"
            cpu: "100m"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-webpage-deployment
  labels:
    app: my-webpage
spec:
  replicas: 1
  selector:
    matchLabels:
      app: my-webpage
  template:
    metadata:
      labels:
        app: my-webpage
    spec:
      containers:
      - name: my-webpage
        image: dleung331d/my-webpage:test
        imagePullPolicy: Always
        ports:
        - containerPort: 5000
        resources:
          requests:
            memory: "16Mi" 
            cpu: "10m"    # 500milliCPUs (1/2 CPU)
          limits:
            memory: "64Mi"
            cpu: "20m"